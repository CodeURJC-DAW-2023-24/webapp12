openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest
      summary: Returns a specific user
      operationId: profile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: User data returned correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
    put:
      tags:
      - user-rest
      summary: Edits a user profile
      operationId: editProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: updates
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: object
      responses:
        "403":
          description: Operation not allowed for the current user
          content:
            application/json: {}
        "400":
          description: Exception originated from JSON data processing or mapping
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "200":
          description: User profile edited correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
    delete:
      tags:
      - user-rest
      summary: Deletes a user profile
      operationId: deleteProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Operation successful
        "403":
          description: Operation only allowed to admins or the user itself
          content:
            application/json: {}
        "404":
          description: Profile not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE'
  /api/rooms/{roomId}/hotels/{hotelId}:
    put:
      tags:
      - room-rest
      summary: Edit a room
      description: Edit a room by room ID and hotel ID.
      operationId: editRoom
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: hotelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: updates
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: object
      responses:
        "404":
          description: Room or hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Room_RoomDetails'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "200":
          description: Room edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room_RoomDetails'
  /api/reviews/{reviewId}/users/{userId}:
    put:
      tags:
      - review-rest
      summary: Edit a review
      description: Edit a review by review ID and user ID.
      operationId: editReview
      parameters:
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: updates
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: object
      responses:
        "404":
          description: User or review not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review_ReviewDetails'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "200":
          description: Review edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review_ReviewDetails'
  /api/reservations/{reservationId}:
    put:
      tags:
      - reservation-rest
      summary: Edit a reservation
      description: Edit an existing reservation by its ID.
      operationId: editReservation
      parameters:
      - name: reservationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: updates
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: object
      responses:
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Reservation not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reservation_ReservationDetails'
        "200":
          description: Reservation edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation_ReservationDetails'
    delete:
      tags:
      - reservation-rest
      summary: Delete a reservation
      description: Delete an existing reservation by its ID.
      operationId: deleteReservation
      parameters:
      - name: reservationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Reservation not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reservation'
        "204":
          description: Reservation deleted successfully
          content:
            application/json: {}
  /api/managers/{id}/rejected/state:
    put:
      tags:
      - user-rest
      summary: Validates or rejects a manager
      operationId: rejectManager
      parameters:
      - name: rejected
        in: query
        required: true
        schema:
          type: boolean
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Operation only allowed for admin users
          content:
            application/json: {}
        "200":
          description: Manager rejected or validated correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "404":
          description: Manager not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
  /api/managers/{id}/applied:
    put:
      tags:
      - user-rest
      summary: Validates or rejects a manager
      operationId: managerApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: state
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: Manager rejected or validated correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "403":
          description: Operation not allowed for the current user
          content:
            application/json: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
  /api/hotels/{id}:
    get:
      tags:
      - hotel-rest
      summary: Get hotel data
      description: Fetches the hotel data for the given ID if the current user is
        the manager of the hotel and the manager is validated.
      operationId: getHotelData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: "Forbidden, current user is not the manager of the hotel"
          content:
            application/json: {}
        "200":
          description: Found the hotel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
      - hotel-rest
      summary: Edit a hotel
      description: Edits the details of the hotel with the given ID if the current
        user is the manager of the hotel.
      operationId: editHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: updates
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: object
      responses:
        "403":
          description: "Forbidden, current user is not the manager of the hotel"
          content:
            application/json: {}
        "200":
          description: Hotel edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
    delete:
      tags:
      - hotel-rest
      summary: Delete a hotel
      description: Deletes the hotel with the given ID if the current user is the
        manager of the hotel.
      operationId: deleteHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: "Forbidden, current user is not the manager of the hotel"
          content:
            application/json: {}
        "204":
          description: Hotel deleted successfully
          content:
            application/json: {}
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Hotel'
  /api/users:
    get:
      tags:
      - user-rest
      summary: Returns a list of all users
      operationId: loadAllUsers
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "403":
          description: Operation only allowed for admin users
          content:
            application/json: {}
        "404":
          description: Users not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseUserE_HotelDetails'
        "200":
          description: List of users returned correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_HotelDetails'
    post:
      tags:
      - user-rest
      summary: Registers a new user
      operationId: registerClient
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserE'
        required: true
      responses:
        "409":
          description: User already exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE'
        "400":
          description: "Bad request, maybe one of the user attributes is missing or\
            \ the type is not valid"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE'
        "201":
          description: User registered correctly
  /api/users/{id}/image:
    get:
      tags:
      - user-image-rest
      summary: Download user profile image
      operationId: downloadProfileImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: User profile image downloaded successfully
          content:
            image/*: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - user-image-rest
      summary: Upload user profile image
      operationId: uploadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "403":
          description: Operation only allowed for the user or an admin
          content:
            application/json: {}
        "201":
          description: User profile image uploaded successfully
          content:
            application/json: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - user-image-rest
      summary: Delete user profile image
      operationId: deleteImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Operation only allowed for the user or an admin
          content:
            application/json: {}
        "204":
          description: User profile image deleted successfully
          content:
            application/json: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                type: object
  /api/rooms/hotels/{hotelId}:
    post:
      tags:
      - room-rest
      summary: Create a room
      description: Create a new room for a specific hotel.
      operationId: postRoom
      parameters:
      - name: hotelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      responses:
        "201":
          description: Room created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Room'
  /api/reviews/hotels/{hotelId}:
    post:
      tags:
      - review-rest
      summary: Post a hotel review
      description: Post a review for a specific hotel by hotel ID.
      operationId: postReview
      parameters:
      - name: hotelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "400":
          description: Invalid input
          content:
            application/json: {}
        "201":
          description: Review created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
  /api/reservations/users/{userId}/hotels/{hotelId}/rooms/{roomId}:
    post:
      tags:
      - reservation-rest
      summary: Add a reservation
      description: "Add a new reservation for a specific user, hotel and room."
      operationId: addReservation
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: hotelId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: roomId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      responses:
        "409":
          description: Conflict with existing data
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Invalid input data
          content:
            application/json: {}
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "201":
          description: Reservation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "404":
          description: Resource not found
          content:
            '*/*':
              schema:
                type: object
  /api/refresh:
    post:
      tags:
      - login-controller
      summary: Checks if the user logged in is the same as the user in the token
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "200":
          description: User is logged in
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "400":
          description: Bad request
          content:
            application/json: {}
  /api/logout:
    post:
      tags:
      - login-controller
      summary: Logs out the user
      operationId: logOut
      responses:
        "200":
          description: User is logged out
          content:
            application/json: {}
  /api/login:
    post:
      tags:
      - login-controller
      summary: User login through JSON
      operationId: loginForm_1
      parameters:
      - name: accessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      - name: loginRequest
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/LoginRequest'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "400":
          description: Bad request
          content:
            application/json: {}
  /api/hotels:
    get:
      tags:
      - hotel-rest
      summary: Load all hotels
      description: Returns a page of all hotels.
      operationId: loadAllHotels
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Hotels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_HotelDetails'
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ hotels"
          content:
            application/json: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseHotel_HotelDetails'
    post:
      tags:
      - hotel-rest
      summary: Create a hotel
      description: Creates a new hotel with the given details.
      operationId: createHotel
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        required: true
        schema:
          type: string
      - name: location
        in: query
        required: true
        schema:
          type: string
      - name: room1
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: cost1
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: room2
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: cost2
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: room3
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: cost3
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: room4
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: cost4
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Hotel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        "404":
          description: Manager not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Hotel'
  /api/hotels/{id}/image:
    get:
      tags:
      - hotel-image-rest
      summary: Download hotel image
      description: Download the image of a specific hotel by hotel ID.
      operationId: downloadProfileImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                type: object
        "200":
          description: Image retrieved successfully
          content:
            image/*: {}
    post:
      tags:
      - hotel-image-rest
      summary: Upload hotel image
      description: Upload an image for a specific hotel by hotel ID.
      operationId: uploadImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "201":
          description: Image uploaded successfully
          content:
            application/json: {}
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - hotel-image-rest
      summary: Delete hotel image
      description: Delete the image of a specific hotel by hotel ID.
      operationId: deleteImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Image deleted successfully
          content:
            application/json: {}
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                type: object
  /api/users/{id}/type:
    get:
      tags:
      - user-rest
      summary: Returns the type of user
      operationId: userType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: User role returned correctly
          content:
            application/json:
              schema:
                type: string
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                type: string
  /api/users/{id}/type/user:
    get:
      tags:
      - user-rest
      summary: Returns if the user is a user or not
      operationId: isUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Boolean matching user role returned correctly
          content:
            application/json:
              schema:
                type: boolean
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                type: boolean
  /api/users/{id}/type/manager:
    get:
      tags:
      - user-rest
      summary: Returns if the user is a manager or not
      operationId: isManager
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Boolean matching user role returned correctly
          content:
            application/json:
              schema:
                type: boolean
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                type: boolean
  /api/users/{id}/type/client:
    get:
      tags:
      - user-rest
      summary: Returns if the user is a client or not
      operationId: isClient
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Boolean matching user role returned correctly
          content:
            application/json:
              schema:
                type: boolean
  /api/users/{id}/type/admin:
    get:
      tags:
      - user-rest
      summary: Returns if the user is an admin or not
      operationId: isAdmin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Boolean matching user role returned correctly
          content:
            application/json:
              schema:
                type: boolean
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                type: boolean
  /api/users/reviews/{id}:
    get:
      tags:
      - user-rest
      summary: Returns a specific user from a specific review
      operationId: reviewUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Review not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "200":
          description: User data returned correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "403":
          description: Operation only allowed for admins or the user that made the
            review
          content:
            application/json: {}
  /api/users/reservations/{id}:
    get:
      tags:
      - user-rest
      summary: Returns a specific user from a specific reservation
      operationId: reservationUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: User data returned correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
        "403":
          description: Operation only allowed for admins or the user that made the
            reservation
          content:
            application/json: {}
        "404":
          description: Reservation not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserE_UserDetails'
  /api/rooms:
    get:
      tags:
      - room-rest
      summary: Load all rooms
      description: Load all rooms with pagination.
      operationId: loadAllRooms
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_HotelDetails'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseRoom_HotelDetails'
  /api/rooms/{id}:
    get:
      tags:
      - room-rest
      summary: Get a room
      description: Get a room by room ID.
      operationId: getRooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Room not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Room_RoomDetails'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "200":
          description: Room retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room_RoomDetails'
  /api/rooms/reservations/{id}:
    get:
      tags:
      - room-rest
      summary: Get reservation room
      description: Get a room by reservation ID.
      operationId: reservationRoom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Reservation not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Room_RoomDetails'
        "200":
          description: Room retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room_RoomDetails'
  /api/rooms/hotels/{id}:
    get:
      tags:
      - room-rest
      summary: Get hotel rooms
      description: Get all rooms of a hotel by hotel ID.
      operationId: hotelRooms
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_RoomDetails'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseRoom_RoomDetails'
  /api/reviews:
    get:
      tags:
      - review-rest
      summary: Load all reviews
      description: Load all reviews with pagination.
      operationId: loadAllReviews
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_HotelDetails'
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseReview_HotelDetails'
  /api/reviews/{id}:
    get:
      tags:
      - review-rest
      summary: Get a review
      description: Get a specific review by its ID.
      operationId: getReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Review retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review_ReviewDetails'
        "404":
          description: Review  not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review_ReviewDetails'
  /api/reviews/users/{id}:
    get:
      tags:
      - review-rest
      summary: Get user reviews
      description: Get all reviews of a specific user by user ID.
      operationId: userReviews
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_ReviewDetails'
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseReview_ReviewDetails'
  /api/reviews/size/hotels/{id}:
    get:
      tags:
      - review-rest
      summary: Get the number of hotel reviews
      description: Get the number of reviews of a specific hotel by hotel ID.
      operationId: hotelReviews
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "200":
          description: Number of reviews retrieved successfully
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /api/reviews/percentage/hotels/{id}:
    get:
      tags:
      - review-rest
      summary: Get the percentage of hotel reviews
      description: Get the percentage of reviews of a specific hotel by hotel ID.
      operationId: hotelReviews_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Percentage of reviews retrieved successfully
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /api/reviews/hotels/{id}:
    get:
      tags:
      - review-rest
      summary: Get hotel reviews
      description: Get all reviews of a specific hotel by hotel ID.
      operationId: hotelReviews_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_ReviewDetails'
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseReview_ReviewDetails'
  /api/reservations:
    get:
      tags:
      - reservation-rest
      summary: Load all reservations
      description: Returns a page of all reservations.
      operationId: loadAllReservations
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Reservations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_HotelDetails'
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ reservations"
          content:
            application/json: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseReservation_HotelDetails'
  /api/reservations/{id}:
    get:
      tags:
      - reservation-rest
      summary: Get a reservation
      description: Returns a specific reservation.
      operationId: getReservation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: "Forbidden, the user does not have permission to view this\
            \ reservation"
          content:
            application/json: {}
        "404":
          description: Reservation not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Reservation_ReservationDetails'
        "200":
          description: Reservation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation_ReservationDetails'
  /api/reservations/users/{id}:
    get:
      tags:
      - reservation-rest
      summary: Get user reservations
      description: Returns a page of reservations for a specific user.
      operationId: getUserReservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Reservations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_ReservationDetails'
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ reservations"
          content:
            application/json: {}
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseReservation_ReservationDetails'
  /api/reservations/rooms/{id}:
    get:
      tags:
      - reservation-rest
      summary: Get room reservations
      description: Returns a page of reservations for a specific room.
      operationId: getRoomReservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Reservations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_ReservationDetails'
        "404":
          description: Room not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseReservation_ReservationDetails'
  /api/reservations/hotels/{id}:
    get:
      tags:
      - reservation-rest
      summary: Get hotel reservations
      description: Returns a page of reservations for a specific hotel.
      operationId: getHotelReservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Reservations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_ReservationDetails'
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseReservation_ReservationDetails'
  /api/request/path:
    get:
      tags:
      - user-rest
      summary: Returns the path of the request
      operationId: getPath
      responses:
        "200":
          description: User data returned correctly
          content:
            application/json:
              schema:
                type: string
  /api/managers/validated:
    get:
      tags:
      - user-rest
      summary: "Returns a list of all managers, validated or pending of validation"
      operationId: managerValidation
      parameters:
      - name: validated
        in: query
        required: true
        schema:
          type: boolean
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseUserE_UserDetails'
        "200":
          description: List of managers returned correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_UserDetails'
        "404":
          description: Managers not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseUserE_UserDetails'
  /api/managers/list:
    get:
      tags:
      - user-rest
      summary: Returns a list of all managers
      operationId: managerList
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: List of managers returned correctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_UserDetails'
        "404":
          description: Managers not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseUserE_UserDetails'
  /api/hotels/{pageNumber}/manager/{id}:
    get:
      tags:
      - hotel-rest
      summary: Load more hotels for a manager
      description: Returns a list of hotels for a specific manager.
      operationId: loadMoreHotelsManagerView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageNumber
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: "Bad request, page number is out of bounds"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel_HotelDetails'
        "200":
          description: Hotels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ hotels"
          content:
            application/json: {}
        "404":
          description: Manager not found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel_HotelDetails'
  /api/hotels/{id}/clients:
    get:
      tags:
      - hotel-rest
      summary: Get clients list
      description: Fetches the list of clients for the given hotel ID if the current
        user is the manager of the hotel.
      operationId: clientsList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: "Forbidden, current user is not the manager of the hotel"
          content:
            application/json: {}
        "200":
          description: Found the clients list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserE_HotelDetails'
        "404":
          description: Hotel not found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserE_HotelDetails'
  /api/hotels/rooms/{id}:
    get:
      tags:
      - hotel-rest
      summary: Get rooms from a hotel
      description: Returns a list of rooms for a specific hotel.
      operationId: getHotelFromRoom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Room not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
        "200":
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room_HotelDetails'
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ rooms"
          content:
            application/json: {}
  /api/hotels/reviews/{id}:
    get:
      tags:
      - hotel-rest
      summary: Get reviews from a hotel
      description: Returns a list of reviews for a specific hotel.
      operationId: getReviewsFromHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ reviews"
          content:
            application/json: {}
        "404":
          description: Review not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
        "200":
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review_HotelDetails'
  /api/hotels/reservations/{id}:
    get:
      tags:
      - hotel-rest
      summary: Get reservations from a hotel
      description: Returns a list of reservations for a specific hotel.
      operationId: getReservationsFromHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Reservation not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
        "200":
          description: Reservations retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation_HotelDetails'
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ reservations"
          content:
            application/json: {}
  /api/hotels/manager/{id}:
    get:
      tags:
      - hotel-rest
      summary: View hotels by manager
      description: Returns a page of hotels managed by the specified user.
      operationId: viewHotelsManager
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Hotels found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_HotelDetails'
        "403":
          description: "Forbidden, the user does not have permission to view these\
            \ hotels"
          content:
            application/json: {}
        "404":
          description: Manager not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseHotel_HotelDetails'
  /api/hotels/index/specific:
    get:
      tags:
      - hotel-rest
      summary: Search hotels
      description: Returns a page of hotels that match the search value.
      operationId: indexSearch
      parameters:
      - name: searchValue
        in: query
        required: true
        schema:
          type: string
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "404":
          description: Hotels not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseHotel_HotelDetails'
        "200":
          description: Hotels found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse_HotelDetails'
  /api/hotels/index/recommended:
    get:
      tags:
      - hotel-rest
      summary: Get recommended hotels
      description: Returns a list of recommended hotels for the current user.
      operationId: index
      responses:
        "200":
          description: Recommended hotels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel_HotelDetails'
  /api/rooms/{roomId}:
    delete:
      tags:
      - room-rest
      summary: Delete a room
      description: Delete a room by room ID.
      operationId: deleteRoom
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Room deleted successfully
          content:
            application/json: {}
        "404":
          description: Room not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Room'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
  /api/reviews/{reviewId}:
    delete:
      tags:
      - review-rest
      summary: Delete a review
      description: Delete a review by review ID.
      operationId: deleteReview
      parameters:
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Review not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
        "403":
          description: Forbidden operation
          content:
            application/json: {}
        "204":
          description: Review deleted successfully
          content:
            application/json: {}
components:
  schemas:
    Hotel_UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        location:
          type: string
        getrating:
          type: number
          format: float
        image:
          type: boolean
        imagePath:
          type: string
        averageRating:
          type: number
          format: float
        numRooms:
          type: integer
          format: int32
        imageBase64:
          type: string
    Reservation_UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        numPeople:
          type: integer
          format: int32
        rooms:
          $ref: '#/components/schemas/Room_UserDetails'
        idReservation:
          type: integer
          format: int64
    Review_UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        score:
          type: integer
          format: int32
        comment:
          type: string
        date:
          type: string
          format: date
        idReview:
          type: integer
          format: int64
    Room_UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maxClients:
          type: integer
          format: int32
        getcost:
          type: number
          format: float
    UserE_UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        bio:
          type: string
        location:
          type: string
        language:
          type: string
        phone:
          type: string
        email:
          type: string
        imagePath:
          type: string
        image:
          type: boolean
        organization:
          type: string
        getvalidated:
          type: boolean
        rejected:
          type: boolean
        collectionRols:
          type: array
          items:
            type: string
        rols:
          type: array
          items:
            type: string
        nick:
          type: string
        pass:
          type: string
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation_UserDetails'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review_UserDetails'
        hotels:
          type: array
          items:
            $ref: '#/components/schemas/Hotel_UserDetails'
        imageBase64:
          type: string
    Hotel_RoomDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        location:
          type: string
        getrating:
          type: number
          format: float
        image:
          type: boolean
        imagePath:
          type: string
        averageRating:
          type: number
          format: float
        numRooms:
          type: integer
          format: int32
        imageBase64:
          type: string
    Reservation_RoomDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        numPeople:
          type: integer
          format: int32
        rooms:
          $ref: '#/components/schemas/Room_RoomDetails'
        idReservation:
          type: integer
          format: int64
    Room_RoomDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maxClients:
          type: integer
          format: int32
        getcost:
          type: number
          format: float
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation_RoomDetails'
        hotel:
          $ref: '#/components/schemas/Hotel_RoomDetails'
    Hotel_ReviewDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        location:
          type: string
        getrating:
          type: number
          format: float
        image:
          type: boolean
        imagePath:
          type: string
        averageRating:
          type: number
          format: float
        numRooms:
          type: integer
          format: int32
        imageBase64:
          type: string
    Review_ReviewDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        score:
          type: integer
          format: int32
        comment:
          type: string
        date:
          type: string
          format: date
        hotel:
          $ref: '#/components/schemas/Hotel_ReviewDetails'
        user:
          $ref: '#/components/schemas/UserE_ReviewDetails'
        idReview:
          type: integer
          format: int64
    UserE_ReviewDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        bio:
          type: string
        location:
          type: string
        language:
          type: string
        phone:
          type: string
        email:
          type: string
        imagePath:
          type: string
        image:
          type: boolean
        organization:
          type: string
        getvalidated:
          type: boolean
        rejected:
          type: boolean
        collectionRols:
          type: array
          items:
            type: string
        rols:
          type: array
          items:
            type: string
        nick:
          type: string
        pass:
          type: string
        imageBase64:
          type: string
    Hotel_ReservationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        location:
          type: string
        getrating:
          type: number
          format: float
        image:
          type: boolean
        imagePath:
          type: string
        averageRating:
          type: number
          format: float
        numRooms:
          type: integer
          format: int32
        imageBase64:
          type: string
    Reservation_ReservationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        numPeople:
          type: integer
          format: int32
        hotel:
          $ref: '#/components/schemas/Hotel_ReservationDetails'
        room:
          $ref: '#/components/schemas/Room_ReservationDetails'
        user:
          $ref: '#/components/schemas/UserE_ReservationDetails'
        rooms:
          $ref: '#/components/schemas/Room_ReservationDetails'
        idReservation:
          type: integer
          format: int64
    Room_ReservationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maxClients:
          type: integer
          format: int32
        getcost:
          type: number
          format: float
    UserE_ReservationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        bio:
          type: string
        location:
          type: string
        language:
          type: string
        phone:
          type: string
        email:
          type: string
        imagePath:
          type: string
        image:
          type: boolean
        organization:
          type: string
        getvalidated:
          type: boolean
        rejected:
          type: boolean
        collectionRols:
          type: array
          items:
            type: string
        rols:
          type: array
          items:
            type: string
        nick:
          type: string
        pass:
          type: string
        imageBase64:
          type: string
    Hotel_HotelDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        location:
          type: string
        getrating:
          type: number
          format: float
        image:
          type: boolean
        imagePath:
          type: string
        manager:
          $ref: '#/components/schemas/UserE_HotelDetails'
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room_HotelDetails'
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation_HotelDetails'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review_HotelDetails'
        averageRating:
          type: number
          format: float
        numRooms:
          type: integer
          format: int32
        imageBase64:
          type: string
    Reservation_HotelDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        numPeople:
          type: integer
          format: int32
        rooms:
          $ref: '#/components/schemas/Room_HotelDetails'
        idReservation:
          type: integer
          format: int64
    Review_HotelDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        score:
          type: integer
          format: int32
        comment:
          type: string
        date:
          type: string
          format: date
        idReview:
          type: integer
          format: int64
    Room_HotelDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maxClients:
          type: integer
          format: int32
        getcost:
          type: number
          format: float
    UserE_HotelDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        bio:
          type: string
        location:
          type: string
        language:
          type: string
        phone:
          type: string
        email:
          type: string
        imagePath:
          type: string
        image:
          type: boolean
        organization:
          type: string
        getvalidated:
          type: boolean
        rejected:
          type: boolean
        collectionRols:
          type: array
          items:
            type: string
        rols:
          type: array
          items:
            type: string
        nick:
          type: string
        pass:
          type: string
        imageBase64:
          type: string
    Hotel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        location:
          type: string
        getrating:
          type: number
          format: float
        image:
          type: boolean
        imagePath:
          type: string
        manager:
          $ref: '#/components/schemas/UserE'
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        averageRating:
          type: number
          format: float
        numRooms:
          type: integer
          format: int32
        imageBase64:
          type: string
    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        numPeople:
          type: integer
          format: int32
        hotel:
          $ref: '#/components/schemas/Hotel'
        room:
          $ref: '#/components/schemas/Room'
        user:
          $ref: '#/components/schemas/UserE'
        rooms:
          $ref: '#/components/schemas/Room'
        idReservation:
          type: integer
          format: int64
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
        score:
          type: integer
          format: int32
        comment:
          type: string
        date:
          type: string
          format: date
        hotel:
          $ref: '#/components/schemas/Hotel'
        user:
          $ref: '#/components/schemas/UserE'
        idReview:
          type: integer
          format: int64
    Room:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maxClients:
          type: integer
          format: int32
        getcost:
          type: number
          format: float
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        hotel:
          $ref: '#/components/schemas/Hotel'
    UserE:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        bio:
          type: string
        location:
          type: string
        language:
          type: string
        phone:
          type: string
        email:
          type: string
        imagePath:
          type: string
        image:
          type: boolean
        organization:
          type: string
        getvalidated:
          type: boolean
        rejected:
          type: boolean
        collectionRols:
          type: array
          items:
            type: string
        rols:
          type: array
          items:
            type: string
        nick:
          type: string
        pass:
          type: string
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        hotels:
          type: array
          items:
            $ref: '#/components/schemas/Hotel'
        imageBase64:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageResponse_HotelDetails:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseUserE_HotelDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserE_HotelDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseRoom_HotelDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Room_HotelDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponse_RoomDetails:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseRoom_RoomDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Room_RoomDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseReview_HotelDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Review_HotelDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponse_ReviewDetails:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseReview_ReviewDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Review_ReviewDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseReservation_HotelDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Reservation_HotelDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponse_ReservationDetails:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseReservation_ReservationDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Reservation_ReservationDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponse_UserDetails:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseUserE_UserDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserE_UserDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResponseHotel_HotelDetails:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Hotel_HotelDetails'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
